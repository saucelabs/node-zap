openapi: "3.0.2"
info:
  title: Sauce ZAP API
  description: Extended Zap API to run Owasp Zap in the cloud.
  contact:
    name: Open Source Program Office
    url: https://opensource.saucelabs.com
    email: opensource@saucelabs.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: Dev Build
servers:
  - url: http://sauce
    description: The URL while proxying through ZAP.
components:
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: X-ZAP-API-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: apikey
      in: query
  schemas:
    Error:
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
    SessionResponse:
      type: object
      required:
      - sessionId
      properties:
        sessionId:
          type: string
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
paths:
  /session/:
    post:
      description: >-
        Create an Owasp Zap session in the cloud
      operationId: newSession
      tags:
        - session
      responses:
        200:
          description: session response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionResponse"
        500:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: commandTimeout
        in: body
        required: false
        deprecated: false
        description: "timeout to close the session when no command was received"
        schema:
          type: integer
      - name: loadFromSessionId
        in: body
        required: false
        deprecated: false
        description: "initiate session with existing Zap session"
        schema:
          type: string
  /session/{sessionId}:
    delete:
      description: >-
        Delete a Owasp Zap session in the cloud
      operationId: deleteSession
      tags:
        - session
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties: {}
        500:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /session/{sessionId}/load:
    post:
      description: >-
        Load persisted session into remote session
      operationId: loadSession
      tags:
        - session
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                session:
                  type: array
                  items:
                    type: string
                    format: binary
                name:
                  type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties: {}
        500:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: path
        in: parameter
        required: true
        description: |
          path to either:
           - a directory
           - a *.tar.gz
          containing session files
        schema:
          type: string
      - name: name
        in: parameter
        required: true
        description: name of the session
        schema:
          type: string
  /session/{sessionId}/assets:
    get:
      description: >-
        Get asset from a complete Zap session
      operationId: getAsset
      tags:
        - session
      responses:
        200:
          description: content of asset file
          content:
            text/plain:
              schema:
                type: string
                description: log files like zap.log
            application/json:
              schema:
                description: command logs, e.g. session.json
            application/x-tar:
              schema:
                description: Zap session, e.g. session.tar.gz
        500:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    parameters:
      - name: name
        in: query
        required: true
        description: name of the asset, e.g. zap.log
        schema:
          type: string
